/**
 * KCS API
 * KOMPAS Collaboration Service API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: modievskii_av@ascon.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInline_response_201.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInline_response_201::OAIInline_response_201(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInline_response_201::OAIInline_response_201() {
    this->initializeModel();
}

OAIInline_response_201::~OAIInline_response_201() {}

void OAIInline_response_201::initializeModel() {

    m_file_ref_isSet = false;
    m_file_ref_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIInline_response_201::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInline_response_201::fromJsonObject(QJsonObject json) {

    m_file_ref_isValid = ::OpenAPI::fromJsonValue(file_ref, json[QString("fileRef")]);
    m_file_ref_isSet = !json[QString("fileRef")].isNull() && m_file_ref_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIInline_response_201::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInline_response_201::asJsonObject() const {
    QJsonObject obj;
    if (m_file_ref_isSet) {
        obj.insert(QString("fileRef"), ::OpenAPI::toJsonValue(file_ref));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(size));
    }
    return obj;
}

QString OAIInline_response_201::getFileRef() const {
    return file_ref;
}
void OAIInline_response_201::setFileRef(const QString &file_ref) {
    this->file_ref = file_ref;
    this->m_file_ref_isSet = true;
}

bool OAIInline_response_201::is_file_ref_Set() const{
    return m_file_ref_isSet;
}

bool OAIInline_response_201::is_file_ref_Valid() const{
    return m_file_ref_isValid;
}

QString OAIInline_response_201::getName() const {
    return name;
}
void OAIInline_response_201::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAIInline_response_201::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInline_response_201::is_name_Valid() const{
    return m_name_isValid;
}

double OAIInline_response_201::getSize() const {
    return size;
}
void OAIInline_response_201::setSize(const double &size) {
    this->size = size;
    this->m_size_isSet = true;
}

bool OAIInline_response_201::is_size_Set() const{
    return m_size_isSet;
}

bool OAIInline_response_201::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIInline_response_201::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInline_response_201::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_file_ref_isValid && m_name_isValid && m_size_isValid && true;
}

} // namespace OpenAPI
